#include <iostream>
#include <stdio.h>
#include <stdlib.h>
#include <vector>
#include <math.h>
#include <algorithm>
using namespace std;
inline unsigned long int binarychecker (unsigned long int N) {
        unsigned long int count=0;
        while(N) {
                if(N%2==1)
                count+=1;
                N/=2;
        }
        return count;
}
int main(void) {
        unsigned long int T=0,N=0,i=0;
        scanf("%lu",&T);
        vector<unsigned long int> v1;
        v1.push_back(1);
        v1.push_back(2);
        for(i=4;i<=10000;i=i*2)
                v1.push_back(i);
        while(T--) {
                scanf("%lu",&N);
                unsigned long int count=0,M=0,res=0;
                M = N + 1; i=0;
                count = binarychecker(N);
                vector<unsigned long int> ::iterator it;
                it = find(v1.begin(),v1.end(),M);
                int size = distance(v1.begin(),it);
                M-=1;
                if(it == v1.end()) {
                        while(res != count) {
                                M+=1;
                                res = 0;
                                res = binarychecker(M);
                        }
                printf("%lu\n",M);
                }
                else {
                        size -=1;
                        printf("%lu\n",(M+v1[size]));
                }
        }
        return 0;
}
